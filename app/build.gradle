apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'net.ltgt.errorprone'
// discover dependency current versions ./gradlew dependencyUpdates -Drevision=release
apply plugin: 'com.gladed.androidgitversion'
apply plugin: 'de.mobilej.unmock'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'
apply plugin: 'io.fabric'

apply from: rootProject.file("gradle/compile.gradle")
apply from: rootProject.file("gradle/android.gradle")

androidExtensions {
    experimental = true
}

androidGitVersion {
    codeFormat 'MNNPPP'
}

afterEvaluate {
    if (!android.applicationVariants.matching { it.buildType.name == 'release' }.isEmpty()) {
        crashlyticsUploadDistributionRelease.dependsOn assembleRelease, rootProject.generateChangelog
    }
}

android {
    defaultConfig {
        applicationId 'com.vander.burner'
        versionName androidGitVersion.name()
        versionCode androidGitVersion.code()
        multiDexEnabled true

        ext.betaDistributionReleaseNotesFilePath = "build/CHANGELOG.md"
    }

    signingConfigs {
        if (isCI()) {
            ci {
                storeFile rootProject.file("keystore.jks")
                storePassword System.getenv("storepass")
                keyAlias System.getenv("keyalias")
                keyPassword System.getenv("keypass")
            }
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".dev"
            buildConfigField "String", "CLIENT_URL", '"http://localhost:3000/"'
            buildConfigField "String", "UNSPENT_SINK", '"0x4edd7ee0834a157f461af282b8e99e213679177f"'
        }
        release {
            buildConfigField "String", "CLIENT_URL", '"https://xdai.io/"'
            buildConfigField "String", "UNSPENT_SINK", '"0xd68d19a46ad7A5E3932294DeD70de210ae38c0E4"' //todo replace with gitcoin B-W grant
//            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (isCI()) {
                signingConfig = signingConfigs.ci
            } else {
                signingConfig = signingConfigs.debug
            }
        }
    }
}

kapt {
    correctErrorTypes = true
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    compile('org.web3j:core:4.1.0-android')

    implementation "androidx.multidex:multidex:2.0.1"
    implementation "androidx.cardview:cardview:1.0.0"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
    implementation "com.github.vanderian:scaffold:feature~burner-SNAPSHOT"
    implementation "com.f2prateek.rx.preferences2:rx-preferences:2.0.0"
    implementation "com.tbruyelle.rxpermissions2:rxpermissions:0.9.5"
    implementation "androidx.room:room-runtime:$versions.androidx_room"
    implementation "androidx.room:room-rxjava2:$versions.androidx_room"
    implementation "me.dm7.barcodescanner:zxing:1.9.8"
    implementation "de.adorsys.android:securestoragelibrary:1.0.3"
    implementation "com.airbnb.android:lottie:2.5.5"
    implementation "com.google.android.gms:play-services-oss-licenses:16.0.2"
    implementation 'com.google.firebase:firebase-core:16.0.7'
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.9@aar') {
        transitive = true
    }

    implementation "com.google.code.gson:gson:2.8.5"
    implementation "com.squareup.okhttp3:okhttp:3.11.0"
    implementation "com.squareup.okhttp3:logging-interceptor:3.11.0"
    implementation "com.squareup.retrofit2:retrofit:2.4.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.4.0"
    implementation "com.squareup.retrofit2:converter-gson:2.4.0"

    implementation "com.github.gnosis.svalinn-kotlin:ethereum-rpc-retrofit:$versions.svalinn"
    implementation "com.github.gnosis.svalinn-kotlin:crypto:$versions.svalinn"
    implementation "com.github.gnosis.svalinn-kotlin:mnemonic-android:$versions.svalinn"
    implementation "com.github.gnosis.svalinn-kotlin:blockies:$versions.svalinn"

    kapt "androidx.room:room-compiler:$versions.androidx_room"
    kapt "androidx.lifecycle:lifecycle-compiler:2.0.0"
    kapt "com.google.dagger:dagger-compiler:2.19"
    kapt "com.google.dagger:dagger-android-processor:2.19"
    kapt "com.github.lukaspili.autodagger2:autodagger2-compiler:1.1"
    compileOnly "javax.annotation:jsr250-api:1.0"

    debugImplementation "at.favre.lib.hood:hood-extended:0.6.0"
    debugImplementation "com.jakewharton:process-phoenix:2.0.0"
    debugImplementation "com.squareup.leakcanary:leakcanary-android:1.6.2"
    debugImplementation "com.github.markzhai:blockcanary-android:1.5.0"
    debugImplementation "com.facebook.stetho:stetho:1.5.0"
    debugImplementation "com.facebook.stetho:stetho-okhttp3:1.5.0"
    debugImplementation "com.facebook.stetho:stetho-js-rhino:1.5.0"

    testImplementation "org.jetbrains.kotlin:kotlin-test:$versions.kotlin"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
    testImplementation "org.amshove.kluent:kluent:1.42"
}

apply plugin: 'com.google.gms.google-services'